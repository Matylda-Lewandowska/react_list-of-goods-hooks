{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","console","log","App","useState","setIsReversed","NONE","setSortType","className","type","cn","onClick","oldIsReversed","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,SACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,cAAcD,MAC7C,MACF,KAAKV,EAASY,OACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEI,OAASH,EAAEG,UAc9C,OARIR,GACFC,EAAaQ,UAKfC,QAAQC,IAAIZ,EAAUC,GAEfC,G,SArCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAMiB,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOb,EAAP,KAAmBc,EAAnB,KACA,EAAgCD,mBAASlB,EAASoB,MAAlD,mBAAOhB,EAAP,KAAiBiB,EAAjB,KAEA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UACtB,CAAE,WAAYpB,IAAaJ,EAASO,WACtCkB,QAAS,kBAAMJ,EAAYrB,EAASO,WAJtC,iCAQA,wBACEgB,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,WAAYpB,IAAaJ,EAASY,SACtCa,QAAS,kBAAMJ,EAAYrB,EAASY,SAJtC,4BASA,wBACEW,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,YAAanB,IACjBoB,QAAS,kBAAMN,GAAc,SAACO,GAAD,OAAoBA,MAJnD,sBASEtB,IAAaJ,EAASoB,MAAQf,IAEzB,wBACEkB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPN,GAAc,GACdE,EAAYrB,EAASoB,OALzB,sBAaT,6BACE,6BACGlB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CsB,KAAI,SAAAC,GACH,OACE,oBAAoB,UAAQ,OAA5B,SAAoCA,GAApC,UAAYA,eC5G5BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.69acc03d.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => (a.localeCompare(b)));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => (a.length - b.length));\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': sortType !== SortType.ALPHABET })}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success',\n            { 'is-light': sortType !== SortType.LENGTH })}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning',\n            { 'is-light': !isReversed })}\n          onClick={() => setIsReversed((oldIsReversed) => !oldIsReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed)\n             && (\n               <button\n                 type=\"button\"\n                 className=\"button is-danger is-light\"\n                 onClick={() => {\n                   setIsReversed(false);\n                   setSortType(SortType.NONE);\n                 }}\n               >\n                 Reset\n               </button>\n             )}\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n            .map(good => {\n              return (\n                <li key={`${good}`} data-cy=\"Good\">{good}</li>\n              );\n            })}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}